#include "KD.h"
#include "globals.h"
  bool _TH13S15F_1; // to reserve MK
  bool _TH13S18F_1; // to reserve MK
  bool _TK13J02F_1; // to reserve MK
  bool _RA12S04F_1; // to reserve MK
  bool _RL52S03F_1; // to reserve MK
  bool _Y067B20F_1; // to reserve MK
  bool _T073B03F_1; // to reserve MK
  bool _T118B03F_1; // to reserve MK
  bool _T118B02F_1; // to reserve MK
  bool _D14MC2_79F_1; // to reserve MK
  bool _D14MC2_86F_1; // to reserve MK
  bool _YA12T767F_1; // to reserve MK
  bool _TH13T151F_1; // to reserve MK
  bool _TP60S05F_1; // to reserve MK
  bool _YA12T779F_1; // to reserve MK
  bool _T651P01F_1; // to reserve MK
_TKD1 *pAI1[KOL_AI1+1]; // +1 worked in case KOL_AI count = 0 
_TKD2 *pAI2[KOL_AI2+1];
_TKD3 *pAI3[KOL_AI3+1];
void Init_KD()
{
 short i;
 for (i=0;i <= KOL_AI1;i++) 
 pAI1[i] = new _TKD1(0,0,0,0,0,0,0,0,0,0,0,0,0); 
 for (i=0;i <= KOL_AI2;i++) 
 pAI2[i] = new _TKD2(0); 
 for (i=0;i <= KOL_AI3;i++) 
 pAI3[i] = new _TKD3(0,0,0,0,0); 
   i=0;
  i++;
  i++;
  i++;
  i++;
  i++;
  i++;
  pAI1[i]->pMask_ZMX = &_Y067B20ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_T073B03ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_T118B03ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_T118B02ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_D14MC2_79ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_D14MC2_86ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_YA12T767ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_TH13T151ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_YA12T779ZMX;
  i++;
  i++;
   i=0;
  i++;
  i++;
  i++;
  i++;
  i++;
  i++;
  pAI1[i]->pMask_ZMN = &_Y067B20ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_T073B03ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_T118B03ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_T118B02ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_D14MC2_79ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_D14MC2_86ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_YA12T767ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_TH13T151ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_YA12T779ZMN;
  i++;
  i++;
   i=0;
  i++;
  i++;
  i++;
  i++;
  i++;
  i++;
  pAI1[i]->pMask_ZDV = &_Y067B20ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_T073B03ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_T118B03ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_T118B02ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_D14MC2_79ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_D14MC2_86ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_YA12T767ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_TH13T151ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_YA12T779ZDV;
  i++;
  i++;
   i=0;
  pAI2[i]->pMask_ZRK = &_T118B0RZRK;
  i++;
   i=0;
};
void KD_RUN()
{
 short i;
 i=0;
 if (Delay_1m<600) Delay_1m++;
  pAI1[i] -> _KD1(_TP60S05,_TP60S05OKD,_TP60S05KRS,_TP60S05K1N,_TP60S05K2N,_TP60S05DV,
  _TP60S05MN,_TP60S05MX,_TP60S05SBRN,_TP60S05R,_TP60S05F,_TP60S05ZZ,_TP60S05F_1);i++;
  pAI1[i] -> _KD1(_TH13S15,_TH13S15OKD,_TH13S15KRS,_TH13S15K1N,_TH13S15K2N,_TH13S15DV,
  _TH13S15MN,_TH13S15MX,_TH13S15SBRN,_TH13S15R,_TH13S15F,_TH13S15ZZ,_TH13S15F_1);i++;
  pAI1[i] -> _KD1(_TH13S18,_TH13S18OKD,_TH13S18KRS,_TH13S18K1N,_TH13S18K2N,_TH13S18DV,
  _TH13S18MN,_TH13S18MX,_TH13S18SBRN,_TH13S18R,_TH13S18F,_TH13S18ZZ,_TH13S18F_1);i++;
  pAI1[i] -> _KD1(_TK13J02,_TK13J02OKD,_TK13J02KRS,_TK13J02K1N,_TK13J02K2N,_TK13J02DV,
  _TK13J02MN,_TK13J02MX,_TK13J02SBRN,_TK13J02R,_TK13J02F,_TK13J02ZZ,_TK13J02F_1);i++;
  pAI1[i] -> _KD1(_RA12S04,_RA12S04OKD,_RA12S04KRS,_RA12S04K1N,_RA12S04K2N,_RA12S04DV,
  _RA12S04MN,_RA12S04MX,_RA12S04SBRN,_RA12S04R,_RA12S04F,_RA12S04ZZ,_RA12S04F_1);i++;
  pAI1[i] -> _KD1(_RL52S03,_RL52S03OKD,_RL52S03KRS,_RL52S03K1N,_RL52S03K2N,_RL52S03DV,
  _RL52S03MN,_RL52S03MX,_RL52S03SBRN,_RL52S03R,_RL52S03F,_RL52S03ZZ,_RL52S03F_1);i++;
  pAI1[i] -> _KD1(_Y067B20,_Y067B20OKD,_Y067B20KRS,_Y067B20K1N,_Y067B20K2N,_Y067B20DV,
  _Y067B20MN,_Y067B20MX,_Y067B20SBRN,_Y067B20R,_Y067B20F,_Y067B20ZZ,_Y067B20F_1);i++;
  pAI1[i] -> _KD1(_T073B03,_T073B03OKD,_T073B03KRS,_T073B03K1N,_T073B03K2N,_T073B03DV,
  _T073B03MN,_T073B03MX,_T073B03SBRN,_T073B03R,_T073B03F,_T073B03ZZ,_T073B03F_1);i++;
  pAI1[i] -> _KD1(_T118B03,_T118B03OKD,_T118B03KRS,_T118B03K1N,_T118B03K2N,_T118B03DV,
  _T118B03MN,_T118B03MX,_T118B0SBRN,_T118B03R,_T118B03F,_T118B03ZZ,_T118B03F_1);i++;
  pAI1[i] -> _KD1(_T118B02,_T118B02OKD,_T118B02KRS,_T118B02K1N,_T118B02K2N,_T118B02DV,
  _T118B02MN,_T118B02MX,_T118B0SBRN,_T118B02R,_T118B02F,_T118B02ZZ,_T118B02F_1);i++;
  pAI1[i] -> _KD1(_D14MC2_79,_D14MC2_79OKD,_D14MC2_79KRS,_D14MC2_79K1N,_D14MC2_79K2N,_D14MC2_79DV,
  _D14MC2_79MN,_D14MC2_79MX,_D14MC2_79SBRN,_D14MC2_79R,_D14MC2_79F,_D14MC2_79ZZ,_D14MC2_79F_1);i++;
  pAI1[i] -> _KD1(_D14MC2_86,_D14MC2_86OKD,_D14MC2_86KRS,_D14MC2_86K1N,_D14MC2_86K2N,_D14MC2_86DV,
  _D14MC2_86MN,_D14MC2_86MX,_D14MC2_86SBRN,_D14MC2_86R,_D14MC2_86F,_D14MC2_86ZZ,_D14MC2_86F_1);i++;
  pAI1[i] -> _KD1(_YA12T767,_YA12T767OKD,_YA12T767KRS,_YA12T767K1N,_YA12T767K2N,_YA12T767DV,
  _YA12T767MN,_YA12T767MX,_YA12T767SBRN,_YA12T767R,_YA12T767F,_YA12T767ZZ,_YA12T767F_1);i++;
  pAI1[i] -> _KD1(_YA12T779,_YA12T779OKD,_YA12T779KRS,_YA12T779K1N,_YA12T779K2N,_YA12T779DV,
  _YA12T779MN,_YA12T779MX,_YA12T779SBRN,_YA12T779R,_YA12T779F,_YA12T779ZZ,_YA12T779F_1);i++;
  pAI1[i] -> _KD1(_T651P01,_T651P01OKD,_T651P01KRS,_T651P01K1N,_T651P01K2N,_T651P01DV,
  _T651P01MN,_T651P01MX,_T651P01SBRN,_T651P01R,_T651P01F,_T651P01ZZ,_T651P01F_1);i++;
  pAI1[i] -> _KD1(_TH13T151,_TH13T151OKD,_TH13T151KRS,_TH13T151K1N,_TH13T151K1N,_TH13T151DV,
  _TH13T151MN,_TH13T151MX,_TH13T151SBRN,_TH13T151R,_TH13T151F,_TH13T151ZZ,_TH13T151F_1);i++;
 i=0;
pAI2[i] -> _KD2(_T118B02R,_T118B03R,_T118B0OKD,_T118B0KRS,_T118B0DEL,
   _T118B02F,_T118B03F,_T118B0SBRN,_T118B0R,_T118B0F,_T118B0ZZ);i++;
 i=0;
};
