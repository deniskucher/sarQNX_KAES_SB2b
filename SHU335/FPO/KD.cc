#include "KD.h"
#include "globals.h"
  bool _TH11S15F_1; // to reserve MK
  bool _TH11S18F_1; // to reserve MK
  bool _TK11J02F_1; // to reserve MK
  bool _RA13S04F_1; // to reserve MK
  bool _RA14S04F_1; // to reserve MK
  bool _RL53S03F_1; // to reserve MK
  bool _RL54S03F_1; // to reserve MK
  bool _Y065B20F_1; // to reserve MK
  bool _T071B03F_1; // to reserve MK
  bool _T116B03F_1; // to reserve MK
  bool _T116B02F_1; // to reserve MK
  bool _D14MC3_79F_1; // to reserve MK
  bool _D14MC4_79F_1; // to reserve MK
  bool _D14MC3_84F_1; // to reserve MK
  bool _D14MC4_84F_1; // to reserve MK
  bool _YA13T768F_1; // to reserve MK
  bool _TH11T153F_1; // to reserve MK
  bool _YA13T780F_1; // to reserve MK
_TKD1 *pAI1[KOL_AI1+1]; // +1 worked in case KOL_AI count = 0 
_TKD2 *pAI2[KOL_AI2+1];
_TKD3 *pAI3[KOL_AI3+1];
void Init_KD()
{
 short i;
 for (i=0;i <= KOL_AI1;i++) 
 pAI1[i] = new _TKD1(0,0,0,0,0,0,0,0,0,0,0,0,0); 
 for (i=0;i <= KOL_AI2;i++) 
 pAI2[i] = new _TKD2(0); 
 for (i=0;i <= KOL_AI3;i++) 
 pAI3[i] = new _TKD3(0,0,0,0,0); 
   i=0;
  i++;
  i++;
  i++;
  i++;
  i++;
  i++;
  i++;
  pAI1[i]->pMask_ZMX = &_Y065B20ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_T071B03ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_T116B03ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_T116B02ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_D14MC3_79ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_D14MC4_79ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_D14MC3_84ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_D14MC4_84ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_YA13T768ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_TH11T153ZMX;
  i++;
  pAI1[i]->pMask_ZMX = &_YA13T780ZMX;
  i++;
   i=0;
  i++;
  i++;
  i++;
  i++;
  i++;
  i++;
  i++;
  pAI1[i]->pMask_ZMN = &_Y065B20ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_T071B03ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_T116B03ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_T116B02ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_D14MC3_79ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_D14MC4_79ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_D14MC3_84ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_D14MC4_84ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_YA13T768ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_TH11T153ZMN;
  i++;
  pAI1[i]->pMask_ZMN = &_YA13T780ZMN;
  i++;
   i=0;
  i++;
  i++;
  i++;
  i++;
  i++;
  i++;
  i++;
  pAI1[i]->pMask_ZDV = &_Y065B20ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_T071B03ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_T116B03ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_T116B02ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_D14MC3_79ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_D14MC4_79ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_D14MC3_84ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_D14MC4_84ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_YA13T768ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_TH11T153ZDV;
  i++;
  pAI1[i]->pMask_ZDV = &_YA13T780ZDV;
  i++;
   i=0;
  pAI2[i]->pMask_ZRK = &_T116B0RZRK;
  i++;
   i=0;
};
void KD_RUN()
{
 short i;
 i=0;
 if (Delay_1m<600) Delay_1m++;
  pAI1[i] -> _KD1(_TH11S15,_TH11S15OKD,_TH11S15KRS,_TH11S15K1N,_TH11S15K2N,_TH11S15DV,
  _TH11S15MN,_TH11S15MX,_TH11S15SBRN,_TH11S15R,_TH11S15F,_TH11S15ZZ,_TH11S15F_1);i++;
  pAI1[i] -> _KD1(_TH11S18,_TH11S18OKD,_TH11S18KRS,_TH11S18K1N,_TH11S18K2N,_TH11S18DV,
  _TH11S18MN,_TH11S18MX,_TH11S18SBRN,_TH11S18R,_TH11S18F,_TH11S18ZZ,_TH11S18F_1);i++;
  pAI1[i] -> _KD1(_TK11J02,_TK11J02OKD,_TK11J02KRS,_TK11J02K1N,_TK11J02K2N,_TK11J02DV,
  _TK11J02MN,_TK11J02MX,_TK11J02SBRN,_TK11J02R,_TK11J02F,_TK11J02ZZ,_TK11J02F_1);i++;
  pAI1[i] -> _KD1(_RA13S04,_RA13S04OKD,_RA13S04KRS,_RA13S04K1N,_RA13S04K2N,_RA13S04DV,
  _RA13S04MN,_RA13S04MX,_RA13S04SBRN,_RA13S04R,_RA13S04F,_RA13S04ZZ,_RA13S04F_1);i++;
  pAI1[i] -> _KD1(_RA14S04,_RA14S04OKD,_RA14S04KRS,_RA14S04K1N,_RA14S04K2N,_RA14S04DV,
  _RA14S04MN,_RA14S04MX,_RA14S04SBRN,_RA14S04R,_RA14S04F,_RA14S04ZZ,_RA14S04F_1);i++;
  pAI1[i] -> _KD1(_RL53S03,_RL53S03OKD,_RL53S03KRS,_RL53S03K1N,_RL53S03K2N,_RL53S03DV,
  _RL53S03MN,_RL53S03MX,_RL53S03SBRN,_RL53S03R,_RL53S03F,_RL53S03ZZ,_RL53S03F_1);i++;
  pAI1[i] -> _KD1(_RL54S03,_RL54S03OKD,_RL54S03KRS,_RL54S03K1N,_RL54S03K2N,_RL54S03DV,
  _RL54S03MN,_RL54S03MX,_RL54S03SBRN,_RL54S03R,_RL54S03F,_RL54S03ZZ,_RL54S03F_1);i++;
  pAI1[i] -> _KD1(_Y065B20,_Y065B20OKD,_Y065B20KRS,_Y065B20K1N,_Y065B20K2N,_Y065B20DV,
  _Y065B20MN,_Y065B20MX,_Y065B20SBRN,_Y065B20R,_Y065B20F,_Y065B20ZZ,_Y065B20F_1);i++;
  pAI1[i] -> _KD1(_T071B03,_T071B03OKD,_T071B03KRS,_T071B03K1N,_T071B03K2N,_T071B03DV,
  _T071B03MN,_T071B03MX,_T071B03SBRN,_T071B03R,_T071B03F,_T071B03ZZ,_T071B03F_1);i++;
  pAI1[i] -> _KD1(_T116B03,_T116B03OKD,_T116B03KRS,_T116B03K1N,_T116B03K2N,_T116B03DV,
  _T116B03MN,_T116B03MX,_T116B0SBRN,_T116B03R,_T116B03F,_T116B03ZZ,_T116B03F_1);i++;
  pAI1[i] -> _KD1(_T116B02,_T116B02OKD,_T116B02KRS,_T116B02K1N,_T116B02K2N,_T116B02DV,
  _T116B02MN,_T116B02MX,_T116B0SBRN,_T116B02R,_T116B02F,_T116B02ZZ,_T116B02F_1);i++;
  pAI1[i] -> _KD1(_D14MC3_79,_D14MC3_79OKD,_D14MC3_79KRS,_D14MC3_79K1N,_D14MC3_79K2N,_D14MC3_79DV,
  _D14MC3_79MN,_D14MC3_79MX,_D14MC3_79SBRN,_D14MC3_79R,_D14MC3_79F,_D14MC3_79ZZ,_D14MC3_79F_1);i++;
  pAI1[i] -> _KD1(_D14MC4_79,_D14MC4_79OKD,_D14MC4_79KRS,_D14MC4_79K1N,_D14MC4_79K2N,_D14MC4_79DV,
  _D14MC4_79MN,_D14MC4_79MX,_D14MC4_79SBRN,_D14MC4_79R,_D14MC4_79F,_D14MC4_79ZZ,_D14MC4_79F_1);i++;
  pAI1[i] -> _KD1(_D14MC3_84,_D14MC3_84OKD,_D14MC3_84KRS,_D14MC3_84K1N,_D14MC3_84K2N,_D14MC3_84DV,
  _D14MC3_84MN,_D14MC3_84MX,_D14MC3_84SBRN,_D14MC3_84R,_D14MC3_84F,_D14MC3_84ZZ,_D14MC3_84F_1);i++;
  pAI1[i] -> _KD1(_D14MC4_84,_D14MC4_84OKD,_D14MC4_84KRS,_D14MC4_84K1N,_D14MC4_84K2N,_D14MC4_84DV,
  _D14MC4_84MN,_D14MC4_84MX,_D14MC4_84SBRN,_D14MC4_84R,_D14MC4_84F,_D14MC4_84ZZ,_D14MC4_84F_1);i++;
  pAI1[i] -> _KD1(_YA13T768,_YA13T768OKD,_YA13T768KRS,_YA13T768K1N,_YA13T768K2N,_YA13T768DV,
  _YA13T768MN,_YA13T768MX,_YA13T768SBRN,_YA13T768R,_YA13T768F,_YA13T768ZZ,_YA13T768F_1);i++;
  pAI1[i] -> _KD1(_YA13T780,_YA13T780OKD,_YA13T780KRS,_YA13T780K1N,_YA13T780K2N,_YA13T780DV,
  _YA13T780MN,_YA13T780MX,_YA13T780SBRN,_YA13T780R,_YA13T780F,_YA13T780ZZ,_YA13T780F_1);i++;
  pAI1[i] -> _KD1(_TH11T153,_TH11T153OKD,_TH11T153KRS,_TH11T153K1N,_TH11T153K1N,_TH11T153DV,
  _TH11T153MN,_TH11T153MX,_TH11T153SBRN,_TH11T153R,_TH11T153F,_TH11T153ZZ,_TH11T153F_1);i++;
 i=0;
pAI2[i] -> _KD2(_T116B02R,_T116B03R,_T116B0OKD,_T116B0KRS,_T116B0DEL,
   _T116B02F,_T116B03F,_T116B0SBRN,_T116B0R,_T116B0F,_T116B0ZZ);i++;
 i=0;
};
